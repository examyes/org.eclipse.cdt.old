<html>
<head>
   <title>Sample project : payroll</title>
</head>
<!----------------------------------------------------------------------------------->
<body text="#000000" bgcolor="#FFFFFF" link="#0000FF" vlink="#FF0000" alink="#000000">
<!-----------------------------------------------------------------------------------
<table BORDER=0 CELLSPACING=5 CELLPADDING=2 WIDTH="100%" >
  <tr> 
    <td ALIGN=left width="80%"><b><font face="Verdana" size="+3">The C/C++<br>
        Development Plugin</font></b></td>
    <td width="20%"><img SRC="../images/idea.jpg" height=86 width=120 align=center></td>
  </tr>
</table>
----------------------------------------------------------------------------------->
<table BORDER=0 CELLSPACING=5 CELLPADDING=2 WIDTH="100%" >
  <tr> 
<td><h1>Sample Project: Payroll</h1></td>
<!----
     <td ALIGN=left VALIGN=top COLSPAN="2" BGCOLOR="#0080c0"><b><font color="#ffffff" face="Arial,Helvetica">
        Sample Project : <i>payroll</i></font></b></td>
---->
  </tr>
<!---------->
  <tr>
     <td ALIGN=left VALIGN=top COLSPAN="2">
 
        <p>The program <b>payroll</b> is provided just to show the
           basic functionality of the <b>C/C++ Development Plugin</b>. <!---The source files intentionally
           contain a BUG in order to illustrate the different views. Follow the next steps
           to find it and fix it.--->
        <ol>
	   <li><b><a href="../gettingstarted/createproject/create.htm">Create a C/C++ Project</a></b>
              <div>Make sure you are in the
              <a href="../concepts/views/cppperspective.htm">C/C++ perspective</a> 
		(<i>Perspective->Open->Other...C/C++</i>).
              <a href="../gettingstarted/createproject/create.htm">Create a C/C++ Project</a> 
		<i>(File->New->C/C++ Project)</i>. Enter
              a project name (e.g <i>"payroll"</i>) and specify as its resource location
              the local directory that contains the source files. i.e. click on the <b>Browse</b>
              button and find the location of the folder <code>"plugins/com.ibm.cpp.docs.user/sample/payroll"</code>.
	Set the <i>Parse Include Path</i> 
	(optional) to the include directory of your compiler.(e.g. <code>"/usr/include/g++-3"</code>)<br><br>
              <img src=./images/pay_1.gif><br><br>
	   </li>
           <li><b><a href="../tasks/parse/parsefiles.htm">Parsing the source files</a></b>
              <div> After the project creation, you will see the
              project in the <a href="../concepts/views/cppprojects.htm">C/C++ Projects view</a>.
              Expand the folder by clicking on the <b>+</b> sign to see its contents (i.e. the source files).
              To parse the source files, right-click on the project (in the Navigator view) and
              select the <i>Parse...Begin Parse</i> option. Open any file by double-cliking its filename<br><br><img src=./images/pay_2.gif><br><br>
              <ul>                
                 <li><div>The <a href="../concepts/views/parsedfiles.htm">C/C++ Parsed-Files view</a>
                    contains the list of source files that have been parsed.</li>
                 <li><div>The <a href="../concepts/views/details.htm">Project Details view</a>
                     displays the contents of the object selected in the
                    <a href="../concepts/views/parsedfiles.htm">Parsed-Files view</a>. Double-click on 
		    any object and the <a href="../Lpex/index.htm">Editor view</a> would display the 
		    source file and you would be positioned at the line where the object occurs. Some 
		    of the parsed objects are themselves expandable (e.g. functions) so you can click 
		    on the <b>+</b> sign  to see the content of the functions.</li>
		 <li><div>The <a href="../concepts/views/systemobjects.htm">C/C++ System-Objects view</a>
		    (<i>Perspective->Show view->C/C++ System Objects</i>) 
		    displays the objects parsed from the <i>include</i> directory ( you can avoid
		    parsing them by not specifying the "Parse Include path" from the "Properties" option)</i>. 
              </ul>
              <p><b>NOTE:</b> If you want to specify the types of files to parse such as <code>.cc .C </code>  etc.
                 you can add them to the <code>"&lt;homedir&gt;/eclipse/plugins/com.ibm.cpp.miners.parser/CPPExtensions.dat"</code> file.<br><br>
	</li>

	   <li><b>Using Views To Navigate The Project</b>
	   <div>To quickly find all classes in our project set the filter <img src="./images/pay_4.gif"> of the C/C++ Project Objects view to "Classes/Structs". Double-click the <code>"sales_person"</code> class  to see its 
	   source location in the editor. Then with the <code>"sales_person"</code> class still selected in the 
	   C/C++ Projects view go to the <code>Project Details</code> view  and set its filter to </i>Derived Classes</i>.
	   Now you would see that <code>"sales_mgr"</code> is derived from <code>"sales_person"</code>.<br>
<img src="./images/pay_5.gif"><br><br> 
Now, change the filter <img src="./images/pay_5a.gif"> in the Project Details view to <i>contents</i> and you would see all members of <code>sales_person</code><br><img src="./images/pay_6.gif"><br><br>
<div> You can find a function with the <b>Search</b> facility. Bring the Search Dialog bo by clicking on the search icon below the menu bar <img src="./images/pay_6a.gif">. Then select <b>C/C++ Search</b>, enter <code>"pay.*"</code> as the search expression and specify a search for a <i>"Function"</i> with <i>"regular expression"</i> enabled. From the results displayed in the <code>Search</code> view, double click on any of the results and the editor would show its source location.<br>
<img src="./images/pay_7.gif"> <br><br>

           <li><b><a href="../concepts/compiling/projects.htm">Build (Compiling) projects</a></b>
              <div>By default the <a href="../tasks/compile/automatic.htm">Automatic Build Feature</a>
              is enabled so the project builds automatically once a resource (e.g. a source file) has been modified,
	      but you can disable this option (<i>->Window->Preferences</i>).
              <div>If you disable Automatic build, you will need to right-click on the project and select the <i><a href="../tasks/compile/invocation.htm">Build Project</a></i> option (A build will execute the command that was
              specified as the <i>Build invocation</i>, in our case it would be default<code>gmake all</code>).
              Any output that the build produces (e.g. error messages or warnings) will be displayed in the 
              <a href="../concepts/views/output.htm">Output view</a>. Double click on a warning and the editor 
	      would redirect you to the line where it occurs.<br><br>
              <img src=./images/pay_3.gif><br><br>	              

           <li><b>RUNNING the project</b><div>You run the newly created executable from the 
              <a href="../concepts/views/command.htm">Command Launcher view</a>. e.g. for the
              <i>payroll</i> project enter "<code>payroll</code>" as the command to run in the
              <b>Command Launcher</b> view. The output of the program will be displayed in the 
              <a href="../concepts/views/output.htm">Output view</a>.<br><br>
              <img src=./images/pay_8.gif><br><br>
           <li><b>Closing the project</b><div>Go to the <b>C/C++ Projects</b> view, right-click on
              the project to open its submenu, and select the <b>Close</b> option. <br><br>
        </ol> 
     </td>
  </tr> 
</table>

<hr>
<h2>Launching the Debugger</h2>
<ol>
<li>Open the above project and build it. Double-click on the left margin of the editor to create a breakpoint (shows as a blue dot). Then in the <code>C/C++ Projects</code> view select the executable <code>"payroll"</code> and launch the Debugger with the bug icon <img src="./images/pay_9.gif"> in the toolbar.(<i>Debug->Start a C/C++ Application</i>).<br><br>
<img src="./images/paydebug_1.gif"><br><br>
</li>
<li>Since the debugger stop at main, we select the resume button <img src="./images/paydebug_2.gif"> in the <code>Debug</code> view to run until the breakpoint. While looking at the <code>Variables</code> view, do a <i>step over</i>(F6) <img src="./images/paydebug_3.gif">  and see how their values change as we step.<br>
<img src="./images/paydebug_4.gif"><br><br>
To monitor the value of a variable highlight the variable name in the editor, right-click and select <i>Add To Monitor</i>. The <code>Monitors</code> view would now display its value.<br>
<img src="./images/paydebug_5.gif"><br><br>
Use the key <code>F5</code> <img src="./images/paydebug_6.gif"> to <i>step into</i> the body of a function and <code>F7</code> <img src="./images/paydebug_7.gif"> to <i>return</i> from it. <br><br>
</li>
<li>
 To finish your debug session, simply select your application in the <code>Debug</code> view, right-click on it and select <i>Terminate</i> 
</li>
</ol>


<!----------------------------------------------------------------------------------->
<table BORDER=0 CELLSPACING=5 CELLPADDING=2 WIDTH="100%" >
<!----
  <tr> 
    <td ALIGN=left VALIGN=top COLSPAN="2" BGCOLOR="#0080c0"><b><font color="#ffffff" face="Arial,Helvetica">
       Contact Us</font></b></td>
  </tr>
---->
<!---------->
  <tr>
     <td ALIGN=left VALIGN=top COLSPAN="2">
     <p><a href = "../frames/contact.htm">Contact Us</a>
     <p><a href="../hglegal.htm"><img border="0" src="../images/ngibmcpy.gif" width="195" height="12"></a></p>
  </td>  
</tr>
</table>
<!----------------------------------------------------------------------------------->
</body>
</html>

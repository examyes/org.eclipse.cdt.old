package org.eclipse.cdt.csharp.core.parser;

public interface CSharpParsersym {
    public final static int
      TK_IDENTIFIER = 1,
      TK_COLON_COLON = 45,
      TK_QUESTION_QUESTION = 103,
      TK_PLUS_PLUS = 33,
      TK_MINUS_MINUS = 34,
      TK_EQUAL_EQUAL = 79,
      TK_LESS_EQUAL = 67,
      TK_GREATER_EQUAL = 68,
      TK_NOT_EQUAL = 80,
      TK_LEFT_SHIFT = 69,
      TK_RIGHT_SHIFT = 70,
      TK_UNSIGNED_RIGHT_SHIFT = 134,
      TK_PLUS_EQUAL = 115,
      TK_MINUS_EQUAL = 116,
      TK_MULTIPLY_EQUAL = 117,
      TK_DIVIDE_EQUAL = 118,
      TK_AND_EQUAL = 119,
      TK_OR_EQUAL = 120,
      TK_XOR_EQUAL = 121,
      TK_REMAINDER_EQUAL = 122,
      TK_LEFT_SHIFT_EQUAL = 123,
      TK_RIGHT_SHIFT_EQUAL = 124,
      TK_UNSIGNED_RIGHT_SHIFT_EQUAL = 135,
      TK_OR_OR = 104,
      TK_AND_AND = 86,
      TK_PLUS = 27,
      TK_MINUS = 28,
      TK_NOT = 38,
      TK_REMAINDER = 87,
      TK_XOR = 81,
      TK_AND = 82,
      TK_MULTIPLY = 88,
      TK_OR = 83,
      TK_TWIDDLE = 29,
      TK_DIVIDE = 89,
      TK_GREATER = 48,
      TK_LESS = 42,
      TK_LPAREN = 2,
      TK_RPAREN = 3,
      TK_LBRACE = 8,
      TK_RBRACE = 21,
      TK_LBRACKET = 6,
      TK_RBRACKET = 46,
      TK_SEMICOLON = 4,
      TK_QUESTION = 30,
      TK_COLON = 44,
      TK_COMMA = 5,
      TK_DOT = 7,
      TK_EQUAL = 47,
      TK_abstract = 90,
      TK_add = 105,
      TK_alias = 91,
      TK_as = 71,
      TK_base = 35,
      TK_bool = 22,
      TK_break = 50,
      TK_byte = 12,
      TK_case = 84,
      TK_catch = 92,
      TK_char = 13,
      TK_checked = 39,
      TK_class = 93,
      TK_const = 53,
      TK_continue = 54,
      TK_decimal = 23,
      TK_default = 31,
      TK_delegate = 32,
      TK_do = 55,
      TK_double = 24,
      TK_else = 56,
      TK_enum = 106,
      TK_event = 107,
      TK_explicit = 125,
      TK_extern = 57,
      TK_false = 36,
      TK_finally = 108,
      TK_fixed = 129,
      TK_float = 25,
      TK_for = 58,
      TK_foreach = 59,
      TK_get = 72,
      TK_goto = 60,
      TK_if = 61,
      TK_implicit = 126,
      TK_in = 127,
      TK_int = 14,
      TK_interface = 128,
      TK_internal = 73,
      TK_is = 74,
      TK_lock = 62,
      TK_long = 15,
      TK_namespace = 109,
      TK_new = 11,
      TK_null = 130,
      TK_object = 9,
      TK_operator = 94,
      TK_out = 75,
      TK_override = 95,
      TK_params = 110,
      TK_partial = 111,
      TK_private = 85,
      TK_protected = 76,
      TK_public = 96,
      TK_readonly = 97,
      TK_ref = 77,
      TK_remove = 112,
      TK_return = 51,
      TK_sbyte = 16,
      TK_sealed = 98,
      TK_set = 78,
      TK_short = 17,
      TK_sizeof = 131,
      TK_stackalloc = 132,
      TK_static = 99,
      TK_string = 10,
      TK_struct = 100,
      TK_switch = 63,
      TK_this = 26,
      TK_throw = 64,
      TK_true = 37,
      TK_try = 65,
      TK_typeof = 40,
      TK_uint = 18,
      TK_ulong = 19,
      TK_unchecked = 41,
      TK_unsafe = 133,
      TK_ushort = 20,
      TK_using = 49,
      TK_virtual = 101,
      TK_void = 43,
      TK_volatile = 102,
      TK_where = 113,
      TK_while = 52,
      TK_yield = 66,
      TK_EOF_TOKEN = 114,
      TK_ERROR_TOKEN = 136;

      public final static String orderedTerminalSymbols[] = {
                 "",
                 "IDENTIFIER",
                 "LPAREN",
                 "RPAREN",
                 "SEMICOLON",
                 "COMMA",
                 "LBRACKET",
                 "DOT",
                 "LBRACE",
                 "object",
                 "string",
                 "new",
                 "byte",
                 "char",
                 "int",
                 "long",
                 "sbyte",
                 "short",
                 "uint",
                 "ulong",
                 "ushort",
                 "RBRACE",
                 "bool",
                 "decimal",
                 "double",
                 "float",
                 "this",
                 "PLUS",
                 "MINUS",
                 "TWIDDLE",
                 "QUESTION",
                 "default",
                 "delegate",
                 "PLUS_PLUS",
                 "MINUS_MINUS",
                 "base",
                 "false",
                 "true",
                 "NOT",
                 "checked",
                 "typeof",
                 "unchecked",
                 "LESS",
                 "void",
                 "COLON",
                 "COLON_COLON",
                 "RBRACKET",
                 "EQUAL",
                 "GREATER",
                 "using",
                 "break",
                 "return",
                 "while",
                 "const",
                 "continue",
                 "do",
                 "else",
                 "extern",
                 "for",
                 "foreach",
                 "goto",
                 "if",
                 "lock",
                 "switch",
                 "throw",
                 "try",
                 "yield",
                 "LESS_EQUAL",
                 "GREATER_EQUAL",
                 "LEFT_SHIFT",
                 "RIGHT_SHIFT",
                 "as",
                 "get",
                 "internal",
                 "is",
                 "out",
                 "protected",
                 "ref",
                 "set",
                 "EQUAL_EQUAL",
                 "NOT_EQUAL",
                 "XOR",
                 "AND",
                 "OR",
                 "case",
                 "private",
                 "AND_AND",
                 "REMAINDER",
                 "MULTIPLY",
                 "DIVIDE",
                 "abstract",
                 "alias",
                 "catch",
                 "class",
                 "operator",
                 "override",
                 "public",
                 "readonly",
                 "sealed",
                 "static",
                 "struct",
                 "virtual",
                 "volatile",
                 "QUESTION_QUESTION",
                 "OR_OR",
                 "add",
                 "enum",
                 "event",
                 "finally",
                 "namespace",
                 "params",
                 "partial",
                 "remove",
                 "where",
                 "EOF_TOKEN",
                 "PLUS_EQUAL",
                 "MINUS_EQUAL",
                 "MULTIPLY_EQUAL",
                 "DIVIDE_EQUAL",
                 "AND_EQUAL",
                 "OR_EQUAL",
                 "XOR_EQUAL",
                 "REMAINDER_EQUAL",
                 "LEFT_SHIFT_EQUAL",
                 "RIGHT_SHIFT_EQUAL",
                 "explicit",
                 "implicit",
                 "in",
                 "interface",
                 "fixed",
                 "null",
                 "sizeof",
                 "stackalloc",
                 "unsafe",
                 "UNSIGNED_RIGHT_SHIFT",
                 "UNSIGNED_RIGHT_SHIFT_EQUAL",
                 "ERROR_TOKEN"
             };

    public final static boolean isValidForParser = true;
}
